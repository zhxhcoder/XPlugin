apply plugin: 'com.android.library'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

this.project.afterEvaluate {
    def buildTask = this.project.tasks.getByName('createFullJarRelease')
    if (buildTask == null) throw GradleException

    buildTask.doLast {
        mkJar.execute()
    }
}
task mkJar {
    doLast {
        if (rootProject.file('app/libs/myJar1.jar').exists()) {
            println('删除旧包')
            rootProject.file('app/libs/htsec_RealTrade.jar').delete()
        }
        copy {
            from('build/intermediates/intermediate-jars/release/')
            into(rootProject.file('app/libs/'))
            include('classes.jar')
            rename('classes.jar', 'myJar1.jar')
        }
    }
}



//删除旧的jar的Task：deleteOldJar 名字随便写
task deleteOldJar(type: Delete) {
    delete 'build/outputs/myJar2.jar'
}

task exportJar(type: Copy) {
    if (rootProject.file('app/libs/myJar2.jar').exists()) {
        println('先删除了')
        rootProject.file('app/libs/myJar2.jar').delete()
    }

    from('build/intermediates/intermediate-jars/release/')
    into(rootProject.file('app/libs/'))
    include('classes.jar')
    rename('classes.jar', 'myJar2.jar')

}

exportJar.dependsOn(deleteOldJar, build)


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}
